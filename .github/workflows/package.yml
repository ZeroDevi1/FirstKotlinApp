# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Android CI

on:
#  release:
#    types: [published]
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - master
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: release apk sign
        run: |
          echo "给apk增加签名"
          cp $GITHUB_WORKSPACE/.github/workflows/keystore.jks $GITHUB_WORKSPACE/app/keystore.jks
          sed '$a\RELEASE_STORE_FILE=./keystore.jks'          $GITHUB_WORKSPACE/gradle.properties -i
      - name: build with gradle
        run: |
          echo "开始进行release构建"
          chmod +x gradlew
          ./gradlew app:assembleRelease
      - name: Create Release
          id: create_release
          uses: monkeyWie/create-release@master
          env:
            GITHUB_TOKEN: ${{ secrets.GIT_RElEASE_TOKEN }}
          with:
            tag_name: ${{ github.ref }}
            release_name: Release ${{ github.ref }}
            draft: false
            prerelease: false
      - name: Upload Release Android
          uses: actions/upload-release-asset@v1.0.1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
            asset_path: ${{ github.workspace }}/app/build/outputs/apk/release/app-release.apk
            asset_name: app-release-${{ steps.create_release.outputs.tag }}.apk
            asset_content_type: application/zip
#      - name: Release apk
#        uses: ncipollo/release-action@v1.5.0
#        with:
#          artifacts: ${{ github.workspace }}/app/build/outputs/apk/release/app-release.apk
#          token: ${{ secrets.GIT_RElEASE_TOKEN }}